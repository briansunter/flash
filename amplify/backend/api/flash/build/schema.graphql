type Card {
  id: ID!
  name: String!
  description: String
  tags: [String!]
  reviews(filter: ModelReviewFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelReviewConnection
}

type Review {
  id: ID!
  type: String!
}

type SuggestedReview {
  id: ID!
  type: String!
  card: Card!
  cardReviewsId: ID!
}

type Query {
  listSuggestedReviews(limit: Int!): [SuggestedReview!]
  getCard(id: ID!): Card
  listCards(filter: ModelCardFilterInput, limit: Int, nextToken: String): ModelCardConnection
  getReview(id: ID!): Review
  listReviews(filter: ModelReviewFilterInput, limit: Int, nextToken: String): ModelReviewConnection
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelCardConnection {
  items: [Card]
  nextToken: String
}

input ModelStringFilterInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
}

input ModelIDFilterInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
}

input ModelIntFilterInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  contains: Int
  notContains: Int
  between: [Int]
}

input ModelFloatFilterInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  contains: Float
  notContains: Float
  between: [Float]
}

input ModelBooleanFilterInput {
  ne: Boolean
  eq: Boolean
}

input ModelCardFilterInput {
  id: ModelIDFilterInput
  name: ModelStringFilterInput
  description: ModelStringFilterInput
  tags: ModelStringFilterInput
  and: [ModelCardFilterInput]
  or: [ModelCardFilterInput]
  not: ModelCardFilterInput
}

input CreateCardInput {
  name: String!
  description: String
  tags: [String!]
}

input UpdateCardInput {
  id: ID!
  name: String
  description: String
  tags: [String!]
}

input DeleteCardInput {
  id: ID
}

type Mutation {
  createCard(input: CreateCardInput!): Card
  updateCard(input: UpdateCardInput!): Card
  deleteCard(input: DeleteCardInput!): Card
  createReview(input: CreateReviewInput!): Review
  updateReview(input: UpdateReviewInput!): Review
  deleteReview(input: DeleteReviewInput!): Review
}

type Subscription {
  onCreateCard: Card @aws_subscribe(mutations: ["createCard"])
  onUpdateCard: Card @aws_subscribe(mutations: ["updateCard"])
  onDeleteCard: Card @aws_subscribe(mutations: ["deleteCard"])
  onCreateReview: Review @aws_subscribe(mutations: ["createReview"])
  onUpdateReview: Review @aws_subscribe(mutations: ["updateReview"])
  onDeleteReview: Review @aws_subscribe(mutations: ["deleteReview"])
}

type ModelReviewConnection {
  items: [Review]
  nextToken: String
}

input ModelReviewFilterInput {
  id: ModelIDFilterInput
  type: ModelStringFilterInput
  and: [ModelReviewFilterInput]
  or: [ModelReviewFilterInput]
  not: ModelReviewFilterInput
}

input CreateReviewInput {
  type: String!
  cardReviewsId: ID
}

input UpdateReviewInput {
  id: ID!
  type: String
  cardReviewsId: ID
}

input DeleteReviewInput {
  id: ID
}
